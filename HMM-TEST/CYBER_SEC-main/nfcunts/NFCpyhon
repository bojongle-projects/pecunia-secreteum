import nfc
import ndef # pip install ndef
from nfc.clf import RemoteTarget
import nfc
from nfc.clf import RemoteTarget
from ndef import TextRecord, UriRecord, SmartposterRecord
from ndef import message_decoder
from ndef import message



if __name__ == '__main__':



def main():
    with nfc.ContactlessFrontend('usb') as clf:
        tag = clf.connect(rdwr={'on-connect': connected})
        print(tag)

def connected(tag):
    global connected
    print(tag)
    return True
with nfc.ContactlessFrontend('udp') as clf:
    clf.connect(rdwr={'on-connect': (connected)})

target = clf.sense(RemoteTarget('106A'), RemoteTarget('106B'), RemoteTarget('212F'))




import nfc
clf = nfc.ContactlessFrontend()
assert clf.connect('tty:USB0:arygon') is True  # open /dev/ttyUSB0 with arygon driver
assert clf.connect('tty:USB0:pn532') is True   # open /dev/ttyUSB0 with pn532 driver
assert clf.connect('tty:AMA0') is True         # try different drivers on /dev/ttyAMA0
assert clf.connect('tty') is True              # try all serial ports and drivers
clf.close()  # previous open calls implicitly closed the device


tag = nfc.tag.activate(clf, target)

print(tag)

message1 = ndef.message(ndef.TextRecord('Hello World!'))
assert tag.ndef is not None
for record in tag.ndef.records:
    print(record)


target = clf.sense(RemoteTarget('106A'), RemoteTarget('106B'), RemoteTarget('212F'))
print(target)


tag = clf.connect(rdwr={'on-connect': lambda tag: False})
print (clf)


import ndef
message1 = ndef.message(ndef.TextRecord('Hello World!'))
assert tag is not None